// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.31'

    ext {
        compileSdkVersion = 28
        buildToolsVersion = '28.0.3'

        minSdkVersion = 19
        targetSdkVersion = 26

        daggerVersion = '2.21'
        sqlDelightVersion = '1.1.3'

        // Versions for AndroidX library groups
        androidxAnnotationVer = "1.1.0" // androidx.annotation
        androidxAppcompatVer = "1.1.0-beta01" // androidx.appcompat
        androidxConcurrentVer = "1.0.0-beta01" // androidx.concurrent
        androidxConstraintlayoutVer = "1.1.3" // androidx.constraintlayout
        androidxFragmentVer = "1.1.0-beta01" // androidx.fragment
        androidxGridlayoutVer = "1.0.0" // androidx.gridlayout
        androidxLifecycleVer = "2.2.0-alpha01" // androidx.lifecycle
        androidxMultidexVer = "2.0.1" // androidx.multidex
        androidxRecyclerviewVer = "1.1.0-alpha06" // androidx.recyclerview
        androidxSqliteVer = "2.0.1" // androidx.sqlite
        androidxViewpagerVer = "1.0.0" // androidx.viewpager

        androidxTestVer = "1.2.0" // androidx.test
        androidxTestExtVer = "1.1.1" // androidx.test.ext
        androidxTestEspressoVer = "3.2.0" // androidx.test.espresso
        androidxTestUiautomatorVer = "2.2.0" // androidx.test.uiautomator
    }

    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0-beta04'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath "com.squareup.sqldelight:gradle-plugin:$sqlDelightVersion"
    }
}

allprojects {
    repositories {
        google()
        jcenter()

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// Extra compiler arguments
allprojects {
    // Disable code formatting for Dagger generated code (speeds up build time)
    tasks.withType(JavaCompile).all {
        options.compilerArgs += [
                '-Xlint:all',
                '-Xmaxerrs', '1000',
                '-Xmaxwarns', '10000'
        ]
    }
    afterEvaluate {
        def kapt = extensions.findByName('kapt')
        if (kapt != null) {
            kapt.arguments {
                arg("dagger.formatGeneratedSource", "disabled")
                // arg("dagger.moduleBindingValidation", "ERROR") // module-level validation (increases build time though)
            }
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs += [
                    '-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi', // Suppress warnings of Experimental API usage
                    '-progressive' // Enable progressive mode
            ]
        }
    }
}
